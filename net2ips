#! /usr/bin/env bash

set -u
set -e

# Convert an IPv4 network in CIDR notation to a list of IP addresses.
#
# Copyright (C) 2013-2019 Erik Auerswald <auerswal@unix-ag.uni-kl.de>
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
#
# Requires BASH and ipcalc (http://jodies.de/ipcalc) or my ipcalc replacement.

VERSION=2019-10-20-01
PROG="$(basename $0)"
IPCALC="ipcalc"
IPCALCOPTS="-n -b"

version()
{
  echo "$PROG version $VERSION"
  echo "Copyright (C) 2013-2019 by Erik Auerswald <auerswal@unix-ag.uni-kl.de>"
}

usage() { echo "Usage: $PROG [ { -h | -L } | NETWORK ]"; }

help()
{
  version
  echo
  usage
  cat <<-EOH
Options:
   -h           print this help and exit
   -L           print license and exit
NETWORK is a network description understood by ipcalc, e.g. 192.0.2.0/24.
Without arguments, network(s) are read from STDIN, one per line.

$PROG prints all possible host IP addresses of the network(s), one per line.
	EOH
}

license()
{
  cat <<-EOL

	Copying and distribution of this file, with or without modification,
	are permitted in any medium without royalty provided the copyright
	notice and this notice are preserved.  This file is offered as-is,
	without any warranty.

	EOL
}

test $# -gt 2 && { usage; exit 1; }

while getopts hL OPT; do
  case "$OPT" in
    h) help; exit 0;;
    L) version; license; exit 0;;
    ?) usage; exit 1;;
  esac
done
shift $(($OPTIND - 1))

if test $# -gt 0; then
  RANGE=$("$IPCALC" $IPCALCOPTS "$@" | \
    sed -n 's/^\(Address\|Broadcast\): *\([^ ]*\).*$/\2/p' | \
    sed 'N;s/^\([^.]*\)\.\([^.]*\)\.\([^.]*\)\.\([^.]*\)\n\([^.]*\)\.\([^.]*\)\.\([^.]*\)\.\([^.]*\)/{\1..\5}.{\2..\6}.{\3..\7}.{\4..\8}/')
  eval printf -- '%s\\n' "$RANGE" | sed '1d;$d'
else
  while read NET; do
  RANGE=$("$IPCALC" $IPCALCOPTS $NET | \
    sed -n 's/^\(Address\|Broadcast\): *\([^ ]*\).*$/\2/p' | \
    sed 'N;s/^\([^.]*\)\.\([^.]*\)\.\([^.]*\)\.\([^.]*\)\n\([^.]*\)\.\([^.]*\)\.\([^.]*\)\.\([^.]*\)/{\1..\5}.{\2..\6}.{\3..\7}.{\4..\8}/')
  eval printf -- '%s\\n' "$RANGE" | sed '1d;$d'
  done
fi

exit 0
